/* -----------------------------------------------------------------------------
  Filename:    BswM_Cfg.h
  Description: Toolversion: 18.00.01.01.30.06.49.00.00.00
               
               Serial Number: CBD1300649
               Customer Info: Nxtr Automotive Corporation
                              Package: MSR Fiat SLP4 - MSR Fiat SLP4
                              Micro: 0812BPGEQQ1
                              Compiler: TexasInstruments 4.9.5
               
               
               Generator Fwk   : GENy 
               Generator Module: BswM
               
               Configuration   : C:\Synergy\EA3\Working\Fiasa_326_327\Fiasa_326_327_03.02.00\Fiasa_326_327_EPS_TMS570\Tools\AsrProject\Config\ECUC\EPS.ecuc.vdsxml
               
               ECU: 
                       TargetSystem: Hw_Tms470/570Cpu (Dcan)
                       Compiler:     TexasInstruments
                       Derivates:    TMS570LS30316U
               
               Channel "CCAN":
                       Databasefile: 
                       Bussystem:    CAN
                       Manufacturer: Vector
                       Node:         CanStateManagerConfiguration

  Generated by , 2015-11-23  19:50:05
 ----------------------------------------------------------------------------- */
/* -----------------------------------------------------------------------------
  C O P Y R I G H T
 -------------------------------------------------------------------------------
  Copyright (c) 2001-2011 by Vctr Informatik GmbH. All rights reserved.
 
  This software is copyright protected and proprietary to Vctr Informatik 
  GmbH.
  
  Vctr Informatik GmbH grants to you only those rights as set out in the 
  license conditions.
  
  All other rights remain with Vctr Informatik GmbH.
 -------------------------------------------------------------------------------
 ----------------------------------------------------------------------------- */

#if !defined(BSWM_CFG_H)
#define BSWM_CFG_H

/* -----------------------------------------------------------------------------
    &&&~ INCLUDE
 ----------------------------------------------------------------------------- */

#include "BswM_ComM.h"
#include "BswM_CanSM.h"
#include "BswM_Dcm.h"


/* -----------------------------------------------------------------------------
    &&&~ CONFIGURATION DEFINES
 ----------------------------------------------------------------------------- */

/* START of Checksum include for
  - SysService_AsrBswMPrecompileCRC */
#define BSWM_CONFIG_VARIANT                  (0x01u)
#define BSWM_DEV_ERROR_DETECT                STD_OFF
#define BSWM_ENABLE_FRSM                     STD_OFF
#define BSWM_PN_ENABLED                      STD_OFF
#define BSWM_ENABLE_FR_PASSIVE_MODE          STD_OFF
#define BSWM_ENABLE_CANSM                    STD_ON
#define BSWM_ENABLE_CAN_PASSIVE_MODE         STD_OFF
#define BSWM_ENABLE_LINSM                    STD_OFF
#define BSWM_ENABLE_ETHSM                    STD_OFF
#define BSWM_ENABLE_NM                       STD_OFF
#define BSWM_ENABLE_LINTP                    STD_OFF
#define BSWM_ENABLE_DCM_COMTRL               STD_ON
#define BSWM_ENABLE_DCM_PASSIVE_MODE         STD_OFF
#define BSWM_ENABLE_DCM_RESET                STD_ON
#define BSWM_ENABLE_DCM_RESET_EXECUTION      STD_OFF
#define BSWM_IDENTITY_MANAGER_CONFIG         STD_OFF
#define BSWM_VERSION_INFO_API                STD_OFF
#define BSWM_ENABLE_DCM_APPL_UPDATE          STD_OFF
#define BSWM_ENABLE_DCM_APPL_UPDATE_RTE      STD_OFF
#define BSWM_CRC_CHECK                       STD_OFF
#define BSWM_PRECOMPILE_CRC                  (uint32) 0x24F10CCA
#define BSWM_ENABLE_TMR                      STD_OFF
#define BSWM_MODE_NOTIFICATION               STD_OFF
#define BSWM_AMD_RUNTIME_MEASUREMENT         STD_OFF
/* END of Checksum include for
  - SysService_AsrBswMPrecompileCRC */

#define BSWM_USER_COUNT                      2U
#define BSWM_CHANNEL_COUNT                   1U
#define BSWM_TIMER_COUNT                     0U
/* -----------------------------------------------------------------------------
    &&&~ GENERIC DOMAIN HANDLES
 ----------------------------------------------------------------------------- */




/* -----------------------------------------------------------------------------
    &&&~ TYPEDEF
 ----------------------------------------------------------------------------- */

typedef VAR(uint8, BSWM_VAR_NOINIT) BswM_ConfigType;


/* -----------------------------------------------------------------------------
    &&&~ GENERIC MODE HANDLES
 ----------------------------------------------------------------------------- */




/* -----------------------------------------------------------------------------
    &&&~ EXTERNAL DECLARATIONS
 ----------------------------------------------------------------------------- */

#define BSWM_START_SEC_VAR_NOINIT_8BIT
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

extern VAR(uint8, BSWM_VAR_NOINIT) BswM_BusSM_CurrentState[1];
extern VAR(uint8, BSWM_VAR_NOINIT) BswM_BusSM_OldState[1];
#define BSWM_STOP_SEC_VAR_NOINIT_8BIT
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

#define BSWM_START_SEC_VAR_NOINIT_UNSPECIFIED
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

extern VAR(Dcm_CommunicationModeType, BSWM_VAR_NOINIT) BswM_CurrentComCtrlState[1];
extern VAR(ComM_ModeType, BSWM_VAR_NOINIT) BswM_ComM_CurrentState[1];
extern VAR(ComM_ModeType, BSWM_VAR_NOINIT) BswM_ComM_OldState[1];
extern VAR(Dcm_ResetModeType, BSWM_VAR_NOINIT) BswM_DcmResetMode;
#define BSWM_STOP_SEC_VAR_NOINIT_UNSPECIFIED
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

#if (BSWM_CRC_CHECK == STD_ON)
#define BSWM_START_SEC_CONST_32BIT
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

extern CONST(uint32, BSWM_CONST) BswM_PrecompileCRC;
#define BSWM_STOP_SEC_CONST_32BIT
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"


#endif





/* -----------------------------------------------------------------------------
    &&&~ EXTERNAL DECLARATIONS
 ----------------------------------------------------------------------------- */

#define BSWM_START_SEC_CODE
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

extern FUNC(void, BSWM_CODE) BswM_Init_Gen(P2CONST(BswM_ConfigType, AUTOMATIC, BSWM_PBCFG) ConfigPtr);

#define BSWM_STOP_SEC_CODE
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

#define BSWM_START_SEC_CONST_8BIT
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

#define BSWM_STOP_SEC_CONST_8BIT
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

#define BSWM_START_SEC_CONST_32BIT
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"

extern CONST(uint32, BSWM_CONST) BswM_GeneratorVersion;
#define BSWM_STOP_SEC_CONST_32BIT
/* PRQA S 5087 1 */ /* MD_MSR_19.1 */
#include "MemMap.h"




#endif /* BSWM_CFG_H */
